syntax = "proto3";

package models;

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "github.com/tfeng/postgres-grpc-example/auth/auth.proto";
import "google/api/annotations.proto";

message User {
    int64 id = 1;
    string name = 2;
    string hashedPassword = 3;
    string role = 4;
}

message CreateRequest {
    string name = 1;
    string password = 2;
    string role = 3;
}

message CreateResponse {
    int64 id = 1;
}

message GetRequest {
}

message LoginRequest {
    int64 id = 1 [(validator.field) = {int_gt: 0}];
    string password = 2;
}

message LoginResponse {
    string token = 1;
}

service UserService {
    rpc Create(CreateRequest) returns (CreateResponse) {
        option (google.api.http) = {
            post: "/v1/users/create"
            body: "*"
        };
    }

    rpc Get(GetRequest) returns (User) {
        option (google.api.http) = {
            get: "/v1/users/get"
        };
        option (auth.checker) = {
            authenticated: true
        };
    }

    rpc Login(LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/v1/users/login"
            body: "*"
        };
    }
};
